/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jp_assignment;

import java.io.*;
import java.util.*;
import java.time.*;
import java.text.*;
import java.util.logging.*;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.Color;



public class manageRoom extends javax.swing.JFrame {

    /**
     * Creates new form manageRoom
     */
    public manageRoom(){
        
        initComponents();
        
        //read txt file to table
        this.readRoomTable();
        this.readBookingTable();
        
        this.editBtn.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        roomPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        roomBackBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        roomSearchTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        roomNumTxt = new javax.swing.JTextField();
        viewTxt = new javax.swing.JTextField();
        paxTxt = new javax.swing.JTextField();
        availableBtn = new javax.swing.JRadioButton();
        unavailableBtn = new javax.swing.JRadioButton();
        editBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        bookingPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookingTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        bookingIDField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        icField = new javax.swing.JTextField();
        numField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        roomIDField = new javax.swing.JTextField();
        checkin_date = new com.toedter.calendar.JDateChooser();
        checkout_date = new com.toedter.calendar.JDateChooser();
        modifyBookingBtn = new javax.swing.JButton();
        jungleBtn = new javax.swing.JRadioButton();
        seaBtn = new javax.swing.JRadioButton();
        bookingSearchTxt = new javax.swing.JTextField();
        bookingSearchBtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        daysField = new javax.swing.JTextField();
        totalField = new javax.swing.JTextField();
        calcBtn = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        bookingBackBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RoomID", "View", "Status", "Pax"
            }
        ));
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTable);

        jLabel2.setFont(new java.awt.Font("Javanese Text", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bedroom.png"))); // NOI18N
        jLabel2.setText("View Room");

        roomBackBtn.setText("Back");
        roomBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomBackBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        jLabel1.setText("Room Management");

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(204, 255, 204));

        roomSearchTxt.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        roomSearchTxt.setForeground(new java.awt.Color(153, 153, 153));
        roomSearchTxt.setText("Room Number Search:");
        roomSearchTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                roomSearchTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                roomSearchTxtFocusLost(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        searchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Javanese Text", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Room Number:");

        jLabel4.setFont(new java.awt.Font("Javanese Text", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("View:");

        jLabel5.setFont(new java.awt.Font("Javanese Text", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Status:");

        jLabel6.setFont(new java.awt.Font("Javanese Text", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Pax:");

        roomNumTxt.setEditable(false);

        buttonGroup1.add(availableBtn);
        availableBtn.setForeground(new java.awt.Color(255, 255, 255));
        availableBtn.setText("Available");

        buttonGroup1.add(unavailableBtn);
        unavailableBtn.setForeground(new java.awt.Color(255, 255, 255));
        unavailableBtn.setText("Unavailable");

        editBtn.setFont(new java.awt.Font("Javanese Text", 0, 18)); // NOI18N
        editBtn.setText("Modify");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 51));
        jLabel7.setText("*RoomID / Room Number (Case Sensitive)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(availableBtn)
                                .addGap(18, 18, 18)
                                .addComponent(unavailableBtn))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(viewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(roomNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(paxTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(roomSearchTxt)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16)
                        .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(roomSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(searchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                        .addGap(2, 2, 2)))
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(roomNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(viewTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(availableBtn)
                    .addComponent(unavailableBtn))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(paxTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout roomPanelLayout = new javax.swing.GroupLayout(roomPanel);
        roomPanel.setLayout(roomPanelLayout);
        roomPanelLayout.setHorizontalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(141, 141, 141)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(208, 208, 208))
            .addGroup(roomPanelLayout.createSequentialGroup()
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addGap(478, 478, 478)
                        .addComponent(jLabel1))
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addGap(639, 639, 639)
                        .addComponent(roomBackBtn)))
                .addContainerGap(576, Short.MAX_VALUE))
        );
        roomPanelLayout.setVerticalGroup(
            roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, roomPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(roomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roomPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(roomBackBtn)
                .addGap(144, 144, 144))
        );

        jTabbedPane2.addTab("Rooms", roomPanel);

        jLabel8.setFont(new java.awt.Font("Javanese Text", 1, 24)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/calendar.png"))); // NOI18N
        jLabel8.setText("View Bookings");

        jLabel9.setFont(new java.awt.Font("Algerian", 0, 36)); // NOI18N
        jLabel9.setText("Room Management");

        bookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Name", "Room ID", "View", "IC/Passport", "Contact", "Email", "Check In", "Check Out", "Days", "Total"
            }
        ));
        bookingTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(bookingTable);

        jPanel4.setBackground(new java.awt.Color(0, 102, 153));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("BookingID");

        jLabel11.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Name");

        jLabel12.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("NRIC");

        jLabel13.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Email");

        jLabel14.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("RoomID");

        jLabel15.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Contact Number");

        jLabel16.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("View");

        jLabel17.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Check In");

        jLabel18.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Check Out");

        bookingIDField.setEditable(false);

        modifyBookingBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        modifyBookingBtn.setText("Modify");
        modifyBookingBtn.setEnabled(false);
        modifyBookingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyBookingBtnActionPerformed(evt);
            }
        });

        buttonGroup2.add(jungleBtn);
        jungleBtn.setForeground(new java.awt.Color(255, 255, 255));
        jungleBtn.setText("Jungle");

        buttonGroup2.add(seaBtn);
        seaBtn.setForeground(new java.awt.Color(255, 255, 255));
        seaBtn.setText("Sea");

        bookingSearchTxt.setFont(new java.awt.Font("Gill Sans MT", 1, 18)); // NOI18N
        bookingSearchTxt.setForeground(new java.awt.Color(153, 153, 153));
        bookingSearchTxt.setText("BookingID Search:");
        bookingSearchTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                bookingSearchTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                bookingSearchTxtFocusLost(evt);
            }
        });

        bookingSearchBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        bookingSearchBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        bookingSearchBtn.setText("Search");
        bookingSearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingSearchBtnActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*Booking ID");

        jLabel20.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Days");

        jLabel21.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Total");

        daysField.setEditable(false);

        totalField.setEditable(false);

        calcBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/validate.png"))); // NOI18N
        calcBtn.setEnabled(false);
        calcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcBtnActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("*Press Validate Button First to Modify");

        deleteBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.setEnabled(false);
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyBookingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel19)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel12))
                                    .addGap(59, 59, 59)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(bookingIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                        .addComponent(nameField)
                                        .addComponent(icField)))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(bookingSearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(bookingSearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel13)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel17)
                                        .addComponent(jLabel18)
                                        .addComponent(jLabel20)
                                        .addComponent(jLabel21))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(numField)
                                        .addComponent(emailField)
                                        .addComponent(roomIDField)
                                        .addComponent(checkin_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(checkout_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(totalField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                                    .addComponent(jungleBtn)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(seaBtn))
                                                .addComponent(daysField, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(calcBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addContainerGap(52, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookingSearchTxt)
                    .addComponent(bookingSearchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(bookingIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(icField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(numField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(roomIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jungleBtn)
                        .addComponent(seaBtn)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(checkin_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(checkout_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(daysField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(totalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(calcBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modifyBookingBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13))
        );

        bookingBackBtn.setText("Back");
        bookingBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingBackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookingPanelLayout = new javax.swing.GroupLayout(bookingPanel);
        bookingPanel.setLayout(bookingPanelLayout);
        bookingPanelLayout.setHorizontalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookingPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(bookingBackBtn)
                .addGap(556, 556, 556))
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addGroup(bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bookingPanelLayout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE))
                    .addGroup(bookingPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bookingPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))
                        .addGap(2, 2, 2)))
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        bookingPanelLayout.setVerticalGroup(
            bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookingPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(bookingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(bookingPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bookingBackBtn)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Room Bookings", bookingPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void roomBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomBackBtnActionPerformed
        mainmenu main = new mainmenu();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_roomBackBtnActionPerformed

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        //Once row selected then show in labels
        
        DefaultTableModel model = (DefaultTableModel)roomTable.getModel();
        int selectedRowIndex = roomTable.getSelectedRow();
        String roomNum = model.getValueAt(selectedRowIndex, 0).toString();
        roomNumTxt.setText(roomNum);
        
        String view = model.getValueAt(selectedRowIndex, 1).toString();
        viewTxt.setText(view);
        
        String status = model.getValueAt(selectedRowIndex, 2).toString();
        if(status.contains("Available")){
           availableBtn.setSelected(true);
        }
        else{
           unavailableBtn.setSelected(true);
        }
        
        String pax = model.getValueAt(selectedRowIndex, 3).toString();
        paxTxt.setText(pax);
        
        editBtn.setEnabled(true);
                    
    }//GEN-LAST:event_roomTableMouseClicked

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed

       //Modify data once button clicked
        int flag = 0;
        DefaultTableModel model = (DefaultTableModel)roomTable.getModel();
        String roomNum = roomNumTxt.getText();
        String view = viewTxt.getText();
        String pax = paxTxt.getText();
        String status;
        if(availableBtn.isSelected()){
            status = "Available";
        } else {
            status = "Unavailable";
        }
        char firstChar = roomNum.charAt(0);
        manageBooking mb = new manageBooking();

        mb.room(roomNum, view, pax , status);

        if(firstChar == 'J' && view.equals("Jungle")) {
            flag = 1;
        } else if (firstChar == 'S' && view.equals("Sea")) {
            flag = 1;
        } else {
            flag = 0;
        }

        switch(flag) {
            case 0:
                JOptionPane.showMessageDialog(this, "View has to be same as RoomID to avoid confusion. Please Try Again.\n Example: J01 - Jungle, S01 - Sea"
                        , "Invalid View", JOptionPane.ERROR_MESSAGE);
                break;
                
            case 1:
                mb.modifyRoom();
                //delete all rows in table
                while (model.getRowCount()>0){
                    model.removeRow(0);
                }
                //update with the latest data
                readRoomTable();

                JOptionPane.showMessageDialog(null, "Data Successfully Modified");
                break;
        }

    }//GEN-LAST:event_editBtnActionPerformed

    private void roomSearchTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roomSearchTxtFocusGained
        if(roomSearchTxt.getText().equals("Room Number Search:")){
            roomSearchTxt.setText("");
            roomSearchTxt.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_roomSearchTxtFocusGained

    private void roomSearchTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roomSearchTxtFocusLost
        if(roomSearchTxt.getText().equals("")){
            roomSearchTxt.setText("Room Number Search:");
            roomSearchTxt.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_roomSearchTxtFocusLost

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        int flag = 0;
        String searchVal = roomSearchTxt.getText();
        
        DefaultTableModel tabModel = (DefaultTableModel)roomTable.getModel();
       
        //loop through every row in table
        for(int i = 0; i<tabModel.getRowCount(); i++){
            Object tableVal = tabModel.getValueAt(i, 0);

            //if roomNum equals to search value then setText for the text fields
            if(tableVal.toString().equals(searchVal)){
                roomNumTxt.setText(tableVal.toString());
                viewTxt.setText(tabModel.getValueAt(i, 1).toString());
                paxTxt.setText(tabModel.getValueAt(i, 3).toString());
                
                if (tabModel.getValueAt(i, 2).toString().equals("Available")){
                    availableBtn.setSelected(true);
                } else if (tabModel.getValueAt(i, 2).toString().equals("Unvailable")) {
                    unavailableBtn.setSelected(true);
                }
                roomSearchTxt.setText(null);
                
                flag = 1;
                editBtn.setEnabled(true);
                //break the loop if result found
                break;
            } 
           
        }
        if(flag != 1){
            JOptionPane.showMessageDialog(null, "Record Not Found, Please Try Again.");
            roomSearchTxt.setText(null);
        }

    }//GEN-LAST:event_searchBtnActionPerformed

    private void bookingTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingTableMouseClicked
        
        DefaultTableModel model = (DefaultTableModel)bookingTable.getModel();
        int selectedRowIndex = bookingTable.getSelectedRow();
        String bookid = model.getValueAt(selectedRowIndex, 0).toString();
        bookingIDField.setText(bookid);
        
        String cusName = model.getValueAt(selectedRowIndex, 1).toString();
        nameField.setText(cusName);
        
        String ic = model.getValueAt(selectedRowIndex, 4).toString();
        icField.setText(ic);
        
        String num = model.getValueAt(selectedRowIndex,5).toString();
        numField.setText(num);
        
        String email = model.getValueAt(selectedRowIndex, 6).toString();
        emailField.setText(email);
        
        String roomid = model.getValueAt(selectedRowIndex, 2).toString();
        roomIDField.setText(roomid);
        
        String view = model.getValueAt(selectedRowIndex, 3).toString();
        if (view.equals("Jungle")) {
            jungleBtn.setSelected(true);
        }else if (view.equals("Sea")) {
            seaBtn.setSelected(true);
        }
        
        
        String checkin = model.getValueAt(selectedRowIndex, 7).toString();
        String checkout = model.getValueAt(selectedRowIndex, 8).toString();
        
        manageBooking mb = new manageBooking();
        mb.date(checkin, checkout);
        
        checkin_date.setDate(mb.indateConversion());
        checkout_date.setDate(mb.outdateConversion());
        
        String day = model.getValueAt(selectedRowIndex, 9).toString();
        daysField.setText(day);
        
        String total = model.getValueAt(selectedRowIndex, 10).toString();
        totalField.setText(total);
        
        deleteBtn.setEnabled(true);
        calcBtn.setEnabled(true);
    }//GEN-LAST:event_bookingTableMouseClicked

    private void bookingSearchTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookingSearchTxtFocusGained
        if(bookingSearchTxt.getText().equals("BookingID Search:")){
            bookingSearchTxt.setText("");
            bookingSearchTxt.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_bookingSearchTxtFocusGained

    private void bookingSearchTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_bookingSearchTxtFocusLost
        if(bookingSearchTxt.getText().equals("")){
            bookingSearchTxt.setText("BookingID Search:");
            bookingSearchTxt.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_bookingSearchTxtFocusLost

    private void bookingSearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingSearchBtnActionPerformed
        int flag = 0;
        String searchVal = bookingSearchTxt.getText();
        
        DefaultTableModel tabModel = (DefaultTableModel)bookingTable.getModel();
       
        //loop through every row in table
        for(int i = 0; i<tabModel.getRowCount(); i++){
            Object tableVal = tabModel.getValueAt(i, 0);

            //if roomNum equals to search value then setText for the text fields
            if(tableVal.toString().equals(searchVal)){
                bookingIDField.setText(tableVal.toString());
                nameField.setText(tabModel.getValueAt(i, 1).toString());
                icField.setText(tabModel.getValueAt(i, 4).toString());
                numField.setText(tabModel.getValueAt(i, 5).toString());
                emailField.setText(tabModel.getValueAt(i, 6).toString());
                roomIDField.setText(tabModel.getValueAt(i, 2).toString());
              
                if (tabModel.getValueAt(i, 3).toString().equals("Jungle")){
                    jungleBtn.setSelected(true);
                } else if (tabModel.getValueAt(i, 3).toString().equals("Sea")) {
                    seaBtn.setSelected(true);
                }
                
                String checkin = tabModel.getValueAt(i, 7).toString();
                String checkout = tabModel.getValueAt(i, 8).toString();
                manageBooking mb = new manageBooking();
                mb.date(checkin, checkout);

                checkin_date.setDate(mb.indateConversion());
                checkout_date.setDate(mb.outdateConversion());
                
                daysField.setText(tabModel.getValueAt(i, 9).toString());
                

                totalField.setText(tabModel.getValueAt(i, 10).toString());
                
                
                bookingSearchTxt.setText(null);
                
                flag = 1;
                
                //break the loop if result found
                break;
            } 
           
        }
        
        if(flag != 1){
            JOptionPane.showMessageDialog(null, "Record Not Found, Please Try Again.");
            bookingSearchTxt.setText(null);
        }
    }//GEN-LAST:event_bookingSearchBtnActionPerformed

    private void modifyBookingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyBookingBtnActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)bookingTable.getModel();
        
        String bookid = bookingIDField.getText();
        String cusName = nameField.getText();
        String ic = icField.getText();
        String num = numField.getText();
        String email = emailField.getText();
        String roomid = roomIDField.getText();
        String view = null;

        if(seaBtn.isSelected()){
            view = "Sea";
        } else if (jungleBtn.isSelected()){
            view = "Jungle";
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String checkIn = sdf.format(checkin_date.getDate());
        String checkOut = sdf.format(checkout_date.getDate());
        
        String day = daysField.getText();
        String total = totalField.getText();
        manageBooking mb = new manageBooking();
        
        mb.booking(bookid, cusName, ic, num, email, roomid, view, checkIn, checkOut, day, total);
        
        if (mb.modifyBooking()) {
            

             //delete all rows in table
             while (model.getRowCount()>0){
                 model.removeRow(0);
             }
             //update with the latest data
             readBookingTable();
             
             JOptionPane.showMessageDialog(null, "Data Successfully Modified");
             modifyBookingBtn.setEnabled(false);

        }
    }//GEN-LAST:event_modifyBookingBtnActionPerformed

    private void calcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcBtnActionPerformed
        calcValid();
        
    }//GEN-LAST:event_calcBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        String bookID = bookingIDField.getText();
        
        manageBooking mb = new manageBooking();
        if (mb.deleteBooking(bookID)){
                       
                    
            DefaultTableModel model = (DefaultTableModel)bookingTable.getModel();
            //delete all rows in table
            while (model.getRowCount()>0){
                model.removeRow(0);
            }
            //update with the latest data
            readBookingTable();

            JOptionPane.showMessageDialog(null, "Data Successfully Deleted");

        } else {
              JOptionPane.showMessageDialog(null, "Record delete unsuccessfully.");  
        }
 
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void bookingBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingBackBtnActionPerformed
        mainmenu main = new mainmenu();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bookingBackBtnActionPerformed

    public void calcValid() {
        
        
        boolean conflict = false;
        int flag = 0;
        int confuse = 1;
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String checkIn = sdf.format(checkin_date.getDate());
        String checkOut = sdf.format(checkout_date.getDate());

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd", Locale.ENGLISH);
        LocalDate indate = LocalDate.parse(checkIn, formatter);
        LocalDate outdate = LocalDate.parse(checkOut, formatter);
        String roomNum = roomIDField.getText();

        char firstChar = roomNum.charAt(0);

        if(firstChar == 'J' && jungleBtn.isSelected()) {
            confuse = 0;
        } else if (firstChar == 'S' && seaBtn.isSelected()) {
            confuse = 0;
        } else {
            JOptionPane.showMessageDialog(this, "View has to be same as RoomID to avoid confusion. Please Try Again.\n Example: J01 - Jungle, S01 - Sea", "Invalid View", JOptionPane.ERROR_MESSAGE);
        }

        if (confuse == 0){
            LocalDate todate = LocalDate.now();
            if(indate.compareTo(todate) <= 0 && outdate.compareTo(todate) <= 0){
                JOptionPane.showMessageDialog(null, "Date Entered Cannot Before Today. Please Try Other Date.");

            } else if (indate.compareTo(outdate) >= 0) {
                JOptionPane.showMessageDialog(null, "CheckIn Date Cannot be After CheckOut Date. Please Try Other Date.");
            }
            else {

                try {
                    String line;
                    String[] lineArr;
                    BufferedReader booking = new BufferedReader (new FileReader("booking.txt"));

                    while ((line = booking.readLine()) != null) {

                        lineArr = line.split("\\|");
                        System.out.println(lineArr[2]);
                        if(roomIDField.getText().equals(lineArr[2]) && !bookingIDField.getText().equals(lineArr[0])) {

                            String BookedCheckInDate = lineArr[7];
                            String BookedCheckOutDate = lineArr[8];

                            LocalDate checkinDate = LocalDate.parse(BookedCheckInDate, formatter);
                            LocalDate checkoutDate = LocalDate.parse(BookedCheckOutDate, formatter);

                            if (indate.compareTo(checkoutDate) <= 0 && outdate.compareTo(checkinDate) >= 0) {
                               conflict = true;
                            } else {
                                conflict = false;
                            }

                        } else if (!conflict){
                            try {
                                Date checkin = sdf.parse(checkIn);
                                Date checkout = sdf.parse(checkOut);
                                long diff = checkout.getTime() - checkin.getTime();
                                float daysdiff = (diff / (1000*60*60*24));
                                int dayInt = (int) daysdiff;
                                String day = String.valueOf(dayInt);

                                manageBooking mb = new manageBooking();

                                mb.setRoomCharge(350, dayInt);
                                mb.setServiceTax(mb.getRoomCharge(), (0.1));
                                mb.setTourismTax(10, dayInt);
                                mb.setTotalFee(mb.getRoomCharge(), mb.getServiceTax(), mb.getTourismTax());
                                String totalFeeString = String.valueOf(mb.getTotalFee());

                                daysField.setText(day);
                                totalField.setText("RM " + totalFeeString);
                                modifyBookingBtn.setEnabled(true);

                            } catch (ParseException ex) {
                                Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        } else {
                            flag = 1;
                        }

                        if(flag == 1) {
                            modifyBookingBtn.setEnabled(false);
                            JOptionPane.showMessageDialog(null, "Date Entered Conflicted with Other Records. Please Try Other Date.");
                            break;
                        }

                    }
                    booking.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }
    
    
    public void readRoomTable() {
        
        try {
            //read room text file
            BufferedReader br = new BufferedReader(new FileReader("room.txt"));

            DefaultTableModel model = (DefaultTableModel)roomTable.getModel();
            
            //store each lines into object array
            Object[] tableLines = br.lines().toArray();
            
            //for each loop tableLines array
            for (Object tableLine : tableLines) {
                String line = tableLine.toString().trim();
                //split result with "|"
                String[] dataRow = line.split("\\|");
                //add result in table
                model.addRow(dataRow);
            }
            
            br.close();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void readBookingTable() {
        
        try {
            BufferedReader br = new BufferedReader(new FileReader("booking.txt"));

            DefaultTableModel model = (DefaultTableModel)bookingTable.getModel();
            
            //store each lines into object array
            Object[] tableLines = br.lines().toArray();
            
            //for each loop tableLines array
            for (Object tableLine : tableLines) {
                String line = tableLine.toString().trim();
                
                //split result with "|"
                String[] dataRow = line.split("\\|");
                
                //add result in table
                model.addRow(dataRow);
            }
            
            br.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(manageRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(manageRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(manageRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(manageRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(manageRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new manageRoom().setVisible(true);
                
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton availableBtn;
    private javax.swing.JButton bookingBackBtn;
    private javax.swing.JTextField bookingIDField;
    private javax.swing.JPanel bookingPanel;
    private javax.swing.JButton bookingSearchBtn;
    private javax.swing.JTextField bookingSearchTxt;
    private javax.swing.JTable bookingTable;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton calcBtn;
    private com.toedter.calendar.JDateChooser checkin_date;
    private com.toedter.calendar.JDateChooser checkout_date;
    private javax.swing.JTextField daysField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField icField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JRadioButton jungleBtn;
    private javax.swing.JButton modifyBookingBtn;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numField;
    private javax.swing.JTextField paxTxt;
    private javax.swing.JButton roomBackBtn;
    private javax.swing.JTextField roomIDField;
    private javax.swing.JTextField roomNumTxt;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JTextField roomSearchTxt;
    private javax.swing.JTable roomTable;
    private javax.swing.JRadioButton seaBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField totalField;
    private javax.swing.JRadioButton unavailableBtn;
    private javax.swing.JTextField viewTxt;
    // End of variables declaration//GEN-END:variables
}
